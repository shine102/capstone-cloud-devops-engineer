version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  lint-test: 
    docker:
      - image: python:latest
    steps:
      - checkout
      - restore_cache:
          key: pip-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            make setup
            make install
      - save_cache:
          key: pip-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - .venv
      
      - run:
          name: run lint
          command: |
            make setup
            make lint

      - run:
          name: run test
          command: |
            make setup
            make test
  
  build-docker:
    docker:
      - image: circleci/python:latest
    parameters:
      docker-image:
        description: |
          Docker image to build
        type: string
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apt-get install -y sed

      # - setup_remote_docker:
      #     docker_layer_caching: true
      # - run:
      #     name: build docker image
      #     command: |
      #       docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${CIRCLE_WORKFLOW_ID:0:7} .
      #       echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      #       docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: debug
          command: |
            cat deployment/deployment.yaml| sed "s|DOCKER_IMAGE|<< parameters.docker-image >>| > deployment/deployment.yaml
            cat deployment/deployment.yaml

  create-k8s:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws-eks/create-cluster:
          cluster-name: "shine102-<< pipeline.id >>-EKS"
          node-type: t3.medium
          nodes: 1
  
  deploy-application:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deploy-kubernetes/deployment.yaml
          resource-name: deployment/demoapp
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deploy-kubernetes/service.yaml
          show-kubectl-command: true
      - run:
          name: get all
          command: |
            kubectl get all

  # smoke-test:
  
  # switch-version:

  # clean-up:
  
workflows:
  default:
    jobs:
      # - lint-test
      - build-docker:
          docker-image: "$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${CIRCLE_WORKFLOW_ID:0:7}"
          # requires: [lint-test]
      # - create-k8s:
      #     requires: [build-docker]
      # - deploy-application:
      #     requires: [create-k8s]
      #     cluster-name: "shine102-<< pipeline.id >>-EKS"
      #     docker-image: $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${CIRCLE_WORKFLOW_ID:0:7}
      #     filters:
      #       branches:
      #         only: master


